{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapps\\\\test-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatGPTComponent() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: 'system',\n          content: 'You are a helpful assistant.'\n        }, {\n          role: 'user',\n          content: inputText\n        }]\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer YOUR_API_KEY`\n        }\n      });\n      const reply = response.data.choices[0].message.content;\n      setResponse(reply);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatGPTComponent, \"Mo0GBVKU+f8lSL8udRItNYBP7eI=\");\n_c = ChatGPTComponent;\nexport default ChatGPTComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatGPTComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatGPTComponent","_s","inputText","setInputText","response","setResponse","handleSubmit","e","preventDefault","post","model","messages","role","content","headers","reply","data","choices","message","error","console","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/reactapps/test-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction ChatGPTComponent() {\n  const [inputText, setInputText] = useState('');\n  const [response, setResponse] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-3.5-turbo',\n          messages: [\n            { role: 'system', content: 'You are a helpful assistant.' },\n            { role: 'user', content: inputText },\n          ],\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer YOUR_API_KEY`,\n          },\n        }\n      );\n\n      const reply = response.data.choices[0].message.content;\n      setResponse(reply);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n      <p>{response}</p>\n    </div>\n  );\n}\n\nexport default ChatGPTComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMJ,QAAQ,GAAG,MAAMP,KAAK,CAACY,IAAI,CAC/B,4CAA4C,EAC5C;QACEC,KAAK,EAAE,eAAe;QACtBC,QAAQ,EAAE,CACR;UAAEC,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAE;QAA+B,CAAC,EAC3D;UAAED,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEX;QAAU,CAAC;MAExC,CAAC,EACD;QACEY,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG;QACpB;MACF,CACF,CAAC;MAED,MAAMC,KAAK,GAAGX,QAAQ,CAACY,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACL,OAAO;MACtDR,WAAW,CAACU,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAMuB,QAAQ,EAAEhB,YAAa;MAAAe,QAAA,gBAC3BtB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,SAAU;QACjBuB,QAAQ,EAAGlB,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACF/B,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACP/B,OAAA;MAAAsB,QAAA,EAAIjB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV;AAAC7B,EAAA,CA7CQD,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AA+CzB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}